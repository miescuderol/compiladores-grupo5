/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CompiladorGUI.java
 *
 * Created on 29-sep-2011, 20:46:37
 */
package compilador;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author José Ignacio Orlando
 */
public class CompiladorGUI extends javax.swing.JFrame {

    Archivo archivoFuente;
    Compilador compilador;
    String salidaComp;
    String err;
    String tablaSimbolos;
    
    /** Creates new form CompiladorGUI */
    public CompiladorGUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneCodigoFuente = new javax.swing.JScrollPane();
        codigoFuente = new javax.swing.JTextArea();
        lblCodigoFuente = new javax.swing.JLabel();
        tabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        salidaCompilador = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        errores = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaSimbolosGrafica = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaPalabrasReservadas = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaPolacaInversa = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        btnAbrir = new javax.swing.JButton();
        btnCompilar = new javax.swing.JButton();
        guardarAsm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Diseño de Compiladores I - Trabajo Práctico 3 y 4 - Grupo 5");
        setResizable(false);

        codigoFuente.setColumns(20);
        codigoFuente.setEditable(false);
        codigoFuente.setRows(5);
        scrollPaneCodigoFuente.setViewportView(codigoFuente);

        lblCodigoFuente.setText("Código fuente");

        jScrollPane1.setAutoscrolls(true);

        salidaCompilador.setColumns(20);
        salidaCompilador.setEditable(false);
        salidaCompilador.setRows(5);
        jScrollPane1.setViewportView(salidaCompilador);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane.addTab("Salida del compilador", jPanel1);

        errores.setColumns(20);
        errores.setEditable(false);
        errores.setRows(5);
        jScrollPane2.setViewportView(errores);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane.addTab("Lista de errores", jPanel2);

        tablaSimbolosGrafica.setColumns(20);
        tablaSimbolosGrafica.setEditable(false);
        tablaSimbolosGrafica.setRows(5);
        jScrollPane3.setViewportView(tablaSimbolosGrafica);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane.addTab("Tabla de símbolos", jPanel3);

        tablaPalabrasReservadas.setColumns(20);
        tablaPalabrasReservadas.setEditable(false);
        tablaPalabrasReservadas.setRows(5);
        jScrollPane4.setViewportView(tablaPalabrasReservadas);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane.addTab("Palabras reservadas", jPanel4);

        tablaPolacaInversa.setColumns(20);
        tablaPolacaInversa.setRows(5);
        jScrollPane5.setViewportView(tablaPolacaInversa);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane.addTab("Polaca inversa", jPanel5);

        btnAbrir.setText("Abrir código fuente");
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnCompilar.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnCompilar.setText("COMPILAR");
        btnCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarActionPerformed(evt);
            }
        });

        guardarAsm.setText("Guardar codigo assembler");
        guardarAsm.setEnabled(false);
        guardarAsm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarAsmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCodigoFuente)
                    .addComponent(scrollPaneCodigoFuente, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAbrir, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCompilar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guardarAsm, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tabbedPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(578, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCodigoFuente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAbrir)
                            .addComponent(guardarAsm)
                            .addComponent(btnCompilar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
                    .addComponent(scrollPaneCodigoFuente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 535, Short.MAX_VALUE))
                .addContainerGap(22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
    FileFilter filt = new FileNameExtensionFilter("Archivos de texto *.TXT", "txt");
    JFileChooser filechooser = new JFileChooser();
    filechooser.setFileFilter(filt);
    int returnVal = filechooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = filechooser.getSelectedFile();
        if ((file.exists()) && (file.getName().endsWith(".txt"))) {
            try {
                // Se crea el archivo fuente
                this.archivoFuente = new Archivo(file);
                // Se muestra el código fuente por pantalla
               String cod = this.archivoFuente.toString();
               String pantalla = "1\t";
               int nroLinea=1;
               for (int i=0;i<cod.length();i++) {
                   if (cod.charAt(i)=='\n') {
                       pantalla = pantalla + "\n" + ++nroLinea + "\t";
                   } else {
                       pantalla = pantalla + cod.charAt(i);
                   }
               }
               this.codigoFuente.setText(pantalla);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CompiladorGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(CompiladorGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}//GEN-LAST:event_btnAbrirActionPerformed

private void btnCompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompilarActionPerformed
    this.compilador = new Compilador();
    String alArchivo = this.compilador.compilar(this.archivoFuente);
    this.errores.setText(this.compilador.getErrores());
    this.tablaSimbolosGrafica.setText(this.compilador.getContenidoTablaSimbolos());
    this.tablaPalabrasReservadas.setText(this.compilador.getPalabrasReservadas());
    this.tablaPolacaInversa.setText(this.compilador.getPolacaInversa());
    if (this.compilador.isCompilable()) {
        this.salidaCompilador.setText(alArchivo); // mostramos la salida del compilador
        this.guardarAsm.setEnabled(true);
    } else {
        this.salidaCompilador.setText("Ocurrieron errores.\nConsultar pestaña \"Errores\"."); // indicamos la ocurrencia de errores
        this.guardarAsm.setEnabled(false);
    }
    
}//GEN-LAST:event_btnCompilarActionPerformed

    private void guardarAsmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarAsmActionPerformed
        if (this.compilador.isCompilable()) {
            String alArchivo = compilador.getAssembler();
            FileFilter filt = new FileNameExtensionFilter("Archivo assembler *.ASM", "asm");
            JFileChooser filechooser = new JFileChooser();
            filechooser.setFileFilter(filt);
            int returnVal = filechooser.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                try {
                    String nombreArchivo = filechooser.getSelectedFile().toString();
                    File f = new File(nombreArchivo + ".asm");
                    FileWriter ff = new FileWriter(f);
                    ff.write(alArchivo);
                    ff.close();
                    
                    String comc = "cmd /c .\\masm32\\bin\\ml /SUBSYSTEM:CONSOLE /c /Zd /coff " + nombreArchivo + ".asm";
                    Process ptasm32 = Runtime.getRuntime().exec(comc);
                    InputStream is = ptasm32.getInputStream();
                    BufferedReader br = new BufferedReader(new InputStreamReader(is));
                    String aux = br.readLine();
                    while (aux!=null){
                        System.out.println(aux);
                        aux = br.readLine();
                    }
                    String coml = "cmd /c \\masm32\\bin\\Link /SUBSYSTEM:CONSOLE " + nombreArchivo + ".obj";
                    Process ptlink32 = Runtime.getRuntime().exec(coml);
                    InputStream is2 = ptlink32.getInputStream();
                    BufferedReader br2 = new BufferedReader(new InputStreamReader(is2));
                    String aux2 = br2.readLine();
                    while (aux2!=null){
                        System.out.println(aux2);
                        aux2 = br2.readLine();
                    }
                                           
                    Runtime aplicacion = Runtime.getRuntime();
                    try {
                        aplicacion.exec(nombreArchivo + ".exe"); 
                    } catch (Exception e){
                        JOptionPane.showMessageDialog(null,"No se pudo generar/ejecutar el exe","Atención",JOptionPane.ERROR_MESSAGE);
                    }
                    
                    
                    
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null,"No se pudo realizar la compilacion del assembler","Atención",JOptionPane.ERROR_MESSAGE);
                }
            }
            this.guardarAsm.setEnabled(true);
        } else {
            this.guardarAsm.setEnabled(false);
        }
    }//GEN-LAST:event_guardarAsmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompiladorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompiladorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompiladorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompiladorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(CompiladorGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(CompiladorGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(CompiladorGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(CompiladorGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                new CompiladorGUI().setVisible(true);
            }
                
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnCompilar;
    private javax.swing.JTextArea codigoFuente;
    private javax.swing.JTextArea errores;
    private javax.swing.JButton guardarAsm;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblCodigoFuente;
    private javax.swing.JTextArea salidaCompilador;
    private javax.swing.JScrollPane scrollPaneCodigoFuente;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextArea tablaPalabrasReservadas;
    private javax.swing.JTextArea tablaPolacaInversa;
    private javax.swing.JTextArea tablaSimbolosGrafica;
    // End of variables declaration//GEN-END:variables
}
